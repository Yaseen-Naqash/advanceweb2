session 1

1- in cmd : django-admin startproject projectname


2- open folder with vs code
    new terminal

3- craete virtual enviroment
    python -m venv myenv
    ./envname/Scripts/Activate
    (envname) PS C:\Users\Asgardia\Desktop\advanceweb2> pip install django





4- python manage.py startapp appname


5- add app to the installed apps in setting.py
    mainfolder > setting.py > INSTALLED_APPS = [

    'base',
    ]


6-introduce template folder
    create a templates folder in project ROOT
    mainfolder > setting.py > TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [BASE_DIR / 'templates'],  <================================== what you should add here
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

7- introduce static folder
    STATICFILES_DIRS = [
        BASE_DIR / 'static',  <=========== you dont have this by default, write this under STATIC_URL = '/static/'

    ]

8. add urls.py to your app
    yourapp > create new python file (urls.py)

    mainfolder > urls.py

        from django.contrib import admin
        from django.urls import path, include

        urlpatterns = [
            path('admin/', admin.site.urls),
            path('', include('base.urls'))
        ]


9- addressing
    in head {% load static %}
    
    {% static 'address from static folder' %}
    {% url 'my_home_url' %}

10- in forms in html files you must place {% csrf_token %}


project
    |
    |-----  mainprojectfolder (include settings.py)
    |
    |-----  app1
    |-----  app2
    |-----  app3
    |-----  .
    |-----  .
    |-----  .
    |-----  appX
    |
    |-----  myenv
    |
    |-----  templates (html holder)
    |
    |-----  static
    |          |------ css
    |          |------ js
    |          |------ assets
    |
    |-----  manage.py


session 2



    MODEL CREATING 
        1- write your model class inheriting from models.Model
        2- python manage.py makemigrations
        3- python manage.py migrate
        4- python manage.py createsuperuser
        

    DJANGO TEMPLATE ENGINE
        1- {{ variable }}

        2- {% for item in items %}   {{ item.something }}   {% endfor %}

        3- {% if something == {{ variable }}       {% elif %}      {% endif %}

    MAKING DJANGO ADMIN PANEL PERSIAN
        in settings.py > LANGUAGE_CODE = 'en-us' to LANGUAGE_CODE = 'fa-ir'
        in settings.py > TIME_ZONE = 'UTC' to TIME_ZONE = 'Asia/Tehran'



    DJANGO JALALI DATE
    1- pip install django_jalali
    2- add it to settings.py before custom apps 'django_jalali',
    3- in models.py from django_jalali.db import models as jmodels
    4- wirte you models using jmodels.jDateField(null=True) and jmodels.jDateTimeField(null=True)


session 3

    DJANGO QUERIES 
        1- Model.objects.get(id=12, username='someusername')
        2- Model.objects.filter(id=12, username='someusername')
        3- Model.objects.create(username='someusername', phone='09380242434', password='123456')
        4- Model.objects.all()

    UPDATING A MODEL
        somemodel = Model.objects.get(id=12)
        somemodel.username = 'newusername'
        somemodel.save()

    DELETING A MODEL
        somemodel = Model.objects.get(id=12)
        somemodel.delete()


    DJANGO MESSAGES
        1- from django.contrib import messages
        2- messages.error(request, 'your message text')
        3- messages.success(request, 'your message text')
        4- return redirect('your_name_of_where_you_want_show_your_message')
        5- in template:
            {% if messages %}
            <ul class="messages">
                {% for message in messages %}
                <li{% if message.tags %} class="{{ message.tags }}"{% endif %}>{{ message }}</li>
                {% endfor %}
            </ul>
            {% endif %}
            